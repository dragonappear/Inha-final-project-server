plugins {
	id 'org.springframework.boot' version '2.5.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'
}

group = 'com.dragonappear'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-security'
		implementation 'org.springframework.boot:spring-boot-starter-validation'
		implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'
		implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
		implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
		implementation 'com.querydsl:querydsl-jpa'

		developmentOnly 'org.springframework.boot:spring-boot-devtools'
		runtimeOnly 'com.h2database:h2'
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations
		implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.0'

		// https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload
		implementation 'commons-fileupload:commons-fileupload:1.4'
		implementation 'org.apache.commons:commons-lang3:3.12.0'
		implementation 'commons-io:commons-io:2.11.0'

		// https://mvnrepository.com/artifact/mysql/mysql-connector-java
		implementation 'mysql:mysql-connector-java'
		implementation 'org.mariadb.jdbc:mariadb-java-client'
		implementation 'org.springframework.session:spring-session-jdbc'

		// https://mvnrepository.com/artifact/io.springfox
		implementation 'io.springfox:springfox-swagger-ui:2.9.2'
		implementation 'io.springfox:springfox-swagger2:2.9.2'

		// https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
		implementation 'org.apache.httpcomponents:httpclient:4.5.13'

		// https://mvnrepository.com/artifact/javax.validation/validation-api
		implementation("javax.validation:validation-api:2.0.1.Final")

		// https://mvnrepository.com/artifact/com.google.firebase/firebase-admin
		implementation 'com.google.firebase:firebase-admin:8.1.0'

		// https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
		implementation 'com.squareup.okhttp3:okhttp'

		// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
		implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
		// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-impl
		runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
		// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-jackson
		runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'


		testImplementation('org.springframework.boot:spring-boot-starter-test') {
			exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		}
		testImplementation 'org.springframework.security:spring-security-test'
	}
}


test {
	useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}


configurations {
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}



